<resources>
    <string name="app_name">Dileit</string>
    <string name="input_word">Tap here to start…</string>
    <string name="camera">camera</string>
    <string name="voice">Voice</string>
    <string name="english">English</string>
    <string name="persian">Persian</string>
    <string name="drawing">Drawing</string>
    <string name="history">History</string>
    <string name="your_search_history_is_empty">Your search history is empty.</string>
    <string name="review_leitner_box">Review Leitner Box</string>
    <string name="mock_item_leit"><u>24 Items</u></string>
    <string name="type_your_word">Type Your Word</string>
    <string name="words">Words</string>
    <string name="transition_card_fragment">transitionCardView</string>
    <string name="from_dictionary">from Dictionary</string>
    <string name="costume_meaning">Costume</string>
    <string name="guide">Add Guide:</string>
    <string name="simple_sentence_which_helps_you_to_remember">Type here a guide to remember(Optional)</string>
    <string name="save">Save</string>

    <string name="add_new_word_or_phrase_in_leitner">Add new Customized word or phrase in Leitner</string>
    <string name="word_or_phrase">word or phrase</string>
    <string name="translation_or_definition">Translation or Definition</string>
    <string name="leitner_manager">Leitner Manager</string>
    <string name="know">know</string>
    <string name="don_t_know">don\'t know</string>
    <string name="today_s_words">Today\'s words</string>
    <string name="new_words">new words</string>
    <string name="translation">Translation</string>
    <string name="new_">New</string>
    <string name="review">Review</string>
    <string name="learned">Learned</string>
    <string name="tctct"><![CDATA[Upgrade yasin haji Martin Ombura Jr. GOLANG GOOGLE CLOUD ANDROID EVOLUTIONARY COMPUTING DISTRIBUTED SYSTEMD CollapsingToolbar scrollflags in action!!! Android Design — Collapsing Toolbar: ScrollFlags Illustrated Martin Ombura Jr. Martin Ombura Jr. Follow Jan 31, 2018 · 6 min read In this section we will look at CollapsingToolbar scrollflags, combining scrollflags and some considerations when implementing them. 1. ScrollFlags There are 5 scrollflags provided, these are scroll, expandAlways, expandAlwaysCollapsed, snap, exitUntilCollapsed. In order to use scrollflags in your CollapsingToolbar add the following property to your CollapsingToolbar. app:layout_scrollFlags=”<select-flag-here>” Now let’s set up a control without any flags to see how the CollapsingToolbar behaves. Figure 1: Control scroll behavior with no scrollflags. As you can see, from Figure 1, nothing special happens, the NestedScrollView scrolls freely under the CollapsingToolbar as the CollapsingToolbar stays in an expanded state. This is ideal if you have a View in your CollapsingToolbar that should always remain expanded and visible. 1.1 scroll app:layout_scrollFlags=”scroll” The scroll flag allows the NestedScrollView(i.e the underlying view encompassing all the content e.g text-paragraphs and image) to signal to the CollapsingToolbar that it is in a scrolling state. Figure 2: app:layout_scrollFlags=”scroll” If the NestedScrollView is being scrolled up, it will in turn push-up and collapse the CollapsingToolbarto the top allowing it to disappear, enabling the NestedScrollView to expand fully. If the NestedScrollView is being scrolled down, it will begin to expand the CollapsingToolbar. 1.2 enterAlways, enterAlwaysCollapsed, snap & exitUntilCollapsed. app:layout_scrollFlags=”enterAlways” app:layout_scrollFlags=”enterAlwaysCollapsed” app:layout_scrollFlags=”snap” app:layout_scrollFlags=”exitUntilCollapsed” app:layout_scrollFlags=”exitUntilCollapsed” Figure 3: enterAlways, enterAlwaysCollapsed, snap, exitUntilCollapsed — all behave the same when used alone. On their own, each of the four flags above behave similarly to our control. At this point you’re probably wondering why aren’t they different? To see their differences we must combine them with the scroll flag mentioned in Section 1.1 above. 2. Combining ScrollFlags ScrollFlags can be combined to leverage the unique motion from multiple behaviors. To combine scrollflags we just include them separated by the vertical bar character | e.g. To combine the scroll and enterAlways attribute we would do something like this. app:layout_scrollFlags=”scroll|enterAlways” Let’s look at some examples. In Section 1, we saw that the scroll flag was the only one that did something of significance. Lets combine it with the others flags and see if we get anything different. 2.1 scroll|enterAlways vs scroll|enterAlwaysCollapsed The differences between the two are subtle, pay attention to what happens on a downward scroll. Figure 4: scroll|enterAlways (left) vs scroll|enterAlwaysCollapsed (right) At face value scroll|enterAlways & scroll|enterAlwaysCollapsed look identical in function. The difference occurs when the CollapsingToolbar decides to expand upon a downwardNestedScrollView scroll. scroll|enterAlways: Has an eager approach to how soon the CollapsingToolbar expands during an downward scroll. Meaning once there is an downward scroll, this flag will begin to expand the CollapsingToolbar regardless of how far up the NestedScrollView has scrolled. scroll|enterAlwaysCollapsed: Has a lazy approach to how soon the CollapsingToolbar expands during an downward scroll. Meaning the moment there is an downward scroll, The CollapsingToolbar will only expand once the NestedScrollView has scrolled to the top of its content. 2.2 scroll|enterAlways vs scroll|snap Now that we know what scroll|enterAlways does, let’s contrast it to scroll|snap. Figure 5: scroll|enterAlways (left) vs scroll|snap (right) scroll|snap: The difference here is more apparent. snap will always try and set the CollapsingToolbar to either a collapsed or expanded state depending on where the CollapsingToolbar collapsed or expanded to. (I think its best left to the illustration to define it). 2.2 scroll|enterAlways vs scroll|exitUntilCollapse Figure 6: scroll|enterAlways (left) vs scroll|exitUntilCollapsed (right) scroll|exitUntilCollapsed: This is the only scrollflag that will ensure the Toolbar remains at the top and doesn’t disappear on scroll. This flag also behaves similar to the enterAlwaysCollapsed flag as it only expands the CollapsingToolbar once the NestedScrollView approaches the top of its content. 3. Combining even more flags. Playing around with flags is low-key addictive, lets combine more of them! Before you watch the videos, try guess what the flags might do, to see if you really understand the nuances between the two. 3.1 scroll|snap|exitUntilCollapsed Figure 7: scroll|snap|exitUntilCollapsed This combination works well, as it allows the CollapsingToolBar to snap depending on the scroll intensity, however a “full” upward-scroll will always terminate with the Toolbar visible at the top. 3.2 enterAlwaysCollapsed|snap Without the scroll flag once again, nothing really happens to the CollapsingToolbar, as a result, it remains in an expanded state despite scroll efforts. 3.3 scroll|enterAlways|enterAlwaysCollapsed Figure 9: scroll|enterAlways|enterAlwaysCollapsed Given our descriptions of enterAlways & enterAlwaysCollapsed in Section 2.1 above, they behave very differently. As a result the app gets quite confused as to how to handle downward-scrolls. I would recommend not to use this 4. ScrollFlags Observations & Considerations CollapsingToolbar scrollflags depend heavily on the scrolling motion of a NestedScrollView or RecyclerView with some attached ScrollingBehavior to be able to see the effects of the scroll-flags (see article of CoordinatorLayout Behaviors). The scroll flag is key to being able to enable the CollapsingToolbar scrolling. The ordering of flags has no impact. e.g scroll|snap and snap|scroll perform the exact same function. Be wary of mixing scrollflags that may conflict with regards to their function. See section 3.3 on how enterAlways and enterAlwaysCollapsed conflict when a downward-scroll to expand the CollapsingToolbar is introduced. Conclusion ScrollFlags are essential to giving your CollapsingToolbar some personalized character. As we’ve seen, there are several ways of combining flags to get distinct outcomes that can enhance our apps visual aesthetic and better promote our business rules. We’ve also seen some flags when combined can clash and give a negative experience to your users. Be creative and try out some different scrollflag combos for your app! Thanks again for reading! Check out my other article on CoordinatorLayout Behaviors to learn how to create your own! Android Design — Coordinator Layout #1: An Introduction The Coordinator Layout is described as a “a super-powered FrameLayout” according to the docs. It is used to facilitate… medium.com Android Design - Coordinator Layout #2: Creating Custom Behaviors So in the previous article we learnt about what the Coordinator Layout does, and how it facilitates interactions… medium.com Martin Ombura Jr. An assortment of all my articles and research in various… Follow 1.4K Android Design Android App Development AndroidDev Material Design 1.4K claps Applause from you and 154 others Martin Ombura Jr. WRITTEN BY Martin Ombura Jr. Follow Go | | Ggl Cld | Dstrbtd Cmptng | Andrd | Lnx Martin Ombura Jr. Martin Ombura Jr. Follow An assortment of all my articles and research in various tech, psychology and economics related fields. See responses (2) More From Medium Related reads Android Autosizing TextViews, their pitfalls, and what to do about them Fred Porciúncula Fred Porciúncula in ProAndroidDev Feb 5, 2019 · 6 min read 593 Related reads How to Make RecyclerView Items That Expand With Animation Mustufa Ansari Mustufa Ansari in Better Programming Sep 30, 2019 · 4 min read 988 Related reads Setting up a Material Components theme for Android Nick Rout Nick Rout in Over Engineering Jan 24, 2019 · 10 min read 6.9K Discover Medium Welcome to a place where words matter. On Medium, smart voices and original ideas take center stage - with no ads in sight. Watch Make Medium yours Follow all the topics you care about, and we’ll deliver the best stories for you to your homepage and inbox. Explore Become a member Get unlimited access to the best stories on Medium — and support writers while you’re at it. Just $5/month. Upgrade About Help Legal]]></string>
    <string name="help">help</string>
    <string name="setting">Setting</string>
    <string name="reporter">Reporter</string>
    <!-- TODO: Remove or change this placeholder text -->
    <string name="hello_blank_fragment">Hello blank fragment</string>
    <string name="day">Day</string>
    <string name="week">Week</string>
    <string name="month">Month</string>
    <string name="year">Year</string>
    <string name="card_content_category">Card Category</string>

</resources>
